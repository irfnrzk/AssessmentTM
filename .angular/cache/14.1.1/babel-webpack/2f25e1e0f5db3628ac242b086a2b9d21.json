{"ast":null,"code":"import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n  return function auditOperatorFunction(source) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator {\n  constructor(durationSelector) {\n    this.durationSelector = durationSelector;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n  }\n\n}\n\nclass AuditSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, durationSelector) {\n    super(destination);\n    this.durationSelector = durationSelector;\n    this.hasValue = false;\n  }\n\n  _next(value) {\n    this.value = value;\n    this.hasValue = true;\n\n    if (!this.throttled) {\n      let duration;\n\n      try {\n        const {\n          durationSelector\n        } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n\n      const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const {\n      value,\n      hasValue,\n      throttled\n    } = this;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = undefined;\n      throttled.unsubscribe();\n    }\n\n    if (hasValue) {\n      this.value = undefined;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext() {\n    this.clearThrottle();\n  }\n\n  notifyComplete() {\n    this.clearThrottle();\n  }\n\n}","map":{"version":3,"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","audit","durationSelector","auditOperatorFunction","source","lift","AuditOperator","constructor","call","subscriber","subscribe","AuditSubscriber","destination","hasValue","_next","value","throttled","duration","err","error","innerSubscription","closed","clearThrottle","add","remove","undefined","unsubscribe","next","notifyNext","notifyComplete"],"sources":["C:/Project/AngularApp/node_modules/rxjs/_esm2015/internal/operators/audit.js"],"sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\r\nexport function audit(durationSelector) {\r\n    return function auditOperatorFunction(source) {\r\n        return source.lift(new AuditOperator(durationSelector));\r\n    };\r\n}\r\nclass AuditOperator {\r\n    constructor(durationSelector) {\r\n        this.durationSelector = durationSelector;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\r\n    }\r\n}\r\nclass AuditSubscriber extends SimpleOuterSubscriber {\r\n    constructor(destination, durationSelector) {\r\n        super(destination);\r\n        this.durationSelector = durationSelector;\r\n        this.hasValue = false;\r\n    }\r\n    _next(value) {\r\n        this.value = value;\r\n        this.hasValue = true;\r\n        if (!this.throttled) {\r\n            let duration;\r\n            try {\r\n                const { durationSelector } = this;\r\n                duration = durationSelector(value);\r\n            }\r\n            catch (err) {\r\n                return this.destination.error(err);\r\n            }\r\n            const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\r\n            if (!innerSubscription || innerSubscription.closed) {\r\n                this.clearThrottle();\r\n            }\r\n            else {\r\n                this.add(this.throttled = innerSubscription);\r\n            }\r\n        }\r\n    }\r\n    clearThrottle() {\r\n        const { value, hasValue, throttled } = this;\r\n        if (throttled) {\r\n            this.remove(throttled);\r\n            this.throttled = undefined;\r\n            throttled.unsubscribe();\r\n        }\r\n        if (hasValue) {\r\n            this.value = undefined;\r\n            this.hasValue = false;\r\n            this.destination.next(value);\r\n        }\r\n    }\r\n    notifyNext() {\r\n        this.clearThrottle();\r\n    }\r\n    notifyComplete() {\r\n        this.clearThrottle();\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,KAAT,CAAeC,gBAAf,EAAiC;EACpC,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;IAC1C,OAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBJ,gBAAlB,CAAZ,CAAP;EACH,CAFD;AAGH;;AACD,MAAMI,aAAN,CAAoB;EAChBC,WAAW,CAACL,gBAAD,EAAmB;IAC1B,KAAKA,gBAAL,GAAwBA,gBAAxB;EACH;;EACDM,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;IACrB,OAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKP,gBAArC,CAAjB,CAAP;EACH;;AANe;;AAQpB,MAAMS,eAAN,SAA8Bb,qBAA9B,CAAoD;EAChDS,WAAW,CAACK,WAAD,EAAcV,gBAAd,EAAgC;IACvC,MAAMU,WAAN;IACA,KAAKV,gBAAL,GAAwBA,gBAAxB;IACA,KAAKW,QAAL,GAAgB,KAAhB;EACH;;EACDC,KAAK,CAACC,KAAD,EAAQ;IACT,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKF,QAAL,GAAgB,IAAhB;;IACA,IAAI,CAAC,KAAKG,SAAV,EAAqB;MACjB,IAAIC,QAAJ;;MACA,IAAI;QACA,MAAM;UAAEf;QAAF,IAAuB,IAA7B;QACAe,QAAQ,GAAGf,gBAAgB,CAACa,KAAD,CAA3B;MACH,CAHD,CAIA,OAAOG,GAAP,EAAY;QACR,OAAO,KAAKN,WAAL,CAAiBO,KAAjB,CAAuBD,GAAvB,CAAP;MACH;;MACD,MAAME,iBAAiB,GAAGrB,cAAc,CAACkB,QAAD,EAAW,IAAIjB,qBAAJ,CAA0B,IAA1B,CAAX,CAAxC;;MACA,IAAI,CAACoB,iBAAD,IAAsBA,iBAAiB,CAACC,MAA5C,EAAoD;QAChD,KAAKC,aAAL;MACH,CAFD,MAGK;QACD,KAAKC,GAAL,CAAS,KAAKP,SAAL,GAAiBI,iBAA1B;MACH;IACJ;EACJ;;EACDE,aAAa,GAAG;IACZ,MAAM;MAAEP,KAAF;MAASF,QAAT;MAAmBG;IAAnB,IAAiC,IAAvC;;IACA,IAAIA,SAAJ,EAAe;MACX,KAAKQ,MAAL,CAAYR,SAAZ;MACA,KAAKA,SAAL,GAAiBS,SAAjB;MACAT,SAAS,CAACU,WAAV;IACH;;IACD,IAAIb,QAAJ,EAAc;MACV,KAAKE,KAAL,GAAaU,SAAb;MACA,KAAKZ,QAAL,GAAgB,KAAhB;MACA,KAAKD,WAAL,CAAiBe,IAAjB,CAAsBZ,KAAtB;IACH;EACJ;;EACDa,UAAU,GAAG;IACT,KAAKN,aAAL;EACH;;EACDO,cAAc,GAAG;IACb,KAAKP,aAAL;EACH;;AA7C+C"},"metadata":{},"sourceType":"module"}