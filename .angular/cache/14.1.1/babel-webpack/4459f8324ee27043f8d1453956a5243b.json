{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n  return source => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator {\n  constructor(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n\n}\n\nclass CountSubscriber extends Subscriber {\n  constructor(destination, predicate, source) {\n    super(destination);\n    this.predicate = predicate;\n    this.source = source;\n    this.count = 0;\n    this.index = 0;\n  }\n\n  _next(value) {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  _tryPredicate(value) {\n    let result;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  _complete() {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n\n}","map":{"version":3,"names":["Subscriber","count","predicate","source","lift","CountOperator","constructor","call","subscriber","subscribe","CountSubscriber","destination","index","_next","value","_tryPredicate","result","err","error","_complete","next","complete"],"sources":["C:/Project/AngularApp/node_modules/rxjs/_esm2015/internal/operators/count.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\r\nexport function count(predicate) {\r\n    return (source) => source.lift(new CountOperator(predicate, source));\r\n}\r\nclass CountOperator {\r\n    constructor(predicate, source) {\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\r\n    }\r\n}\r\nclass CountSubscriber extends Subscriber {\r\n    constructor(destination, predicate, source) {\r\n        super(destination);\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.count = 0;\r\n        this.index = 0;\r\n    }\r\n    _next(value) {\r\n        if (this.predicate) {\r\n            this._tryPredicate(value);\r\n        }\r\n        else {\r\n            this.count++;\r\n        }\r\n    }\r\n    _tryPredicate(value) {\r\n        let result;\r\n        try {\r\n            result = this.predicate(value, this.index++, this.source);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        if (result) {\r\n            this.count++;\r\n        }\r\n    }\r\n    _complete() {\r\n        this.destination.next(this.count);\r\n        this.destination.complete();\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,CAAeC,SAAf,EAA0B;EAC7B,OAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBH,SAAlB,EAA6BC,MAA7B,CAAZ,CAAnB;AACH;;AACD,MAAME,aAAN,CAAoB;EAChBC,WAAW,CAACJ,SAAD,EAAYC,MAAZ,EAAoB;IAC3B,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDI,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;IACrB,OAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKN,SAArC,EAAgD,KAAKC,MAArD,CAAjB,CAAP;EACH;;AAPe;;AASpB,MAAMO,eAAN,SAA8BV,UAA9B,CAAyC;EACrCM,WAAW,CAACK,WAAD,EAAcT,SAAd,EAAyBC,MAAzB,EAAiC;IACxC,MAAMQ,WAAN;IACA,KAAKT,SAAL,GAAiBA,SAAjB;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKF,KAAL,GAAa,CAAb;IACA,KAAKW,KAAL,GAAa,CAAb;EACH;;EACDC,KAAK,CAACC,KAAD,EAAQ;IACT,IAAI,KAAKZ,SAAT,EAAoB;MAChB,KAAKa,aAAL,CAAmBD,KAAnB;IACH,CAFD,MAGK;MACD,KAAKb,KAAL;IACH;EACJ;;EACDc,aAAa,CAACD,KAAD,EAAQ;IACjB,IAAIE,MAAJ;;IACA,IAAI;MACAA,MAAM,GAAG,KAAKd,SAAL,CAAeY,KAAf,EAAsB,KAAKF,KAAL,EAAtB,EAAoC,KAAKT,MAAzC,CAAT;IACH,CAFD,CAGA,OAAOc,GAAP,EAAY;MACR,KAAKN,WAAL,CAAiBO,KAAjB,CAAuBD,GAAvB;MACA;IACH;;IACD,IAAID,MAAJ,EAAY;MACR,KAAKf,KAAL;IACH;EACJ;;EACDkB,SAAS,GAAG;IACR,KAAKR,WAAL,CAAiBS,IAAjB,CAAsB,KAAKnB,KAA3B;IACA,KAAKU,WAAL,CAAiBU,QAAjB;EACH;;AAhCoC"},"metadata":{},"sourceType":"module"}