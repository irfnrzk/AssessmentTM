{"ast":null,"code":"import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n  return new Observable(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index,\n        count,\n        start,\n        subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n\n        subscriber.next(current++);\n\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\nexport function dispatch(state) {\n  const {\n    start,\n    index,\n    count,\n    subscriber\n  } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}","map":{"version":3,"names":["Observable","range","start","count","scheduler","subscriber","undefined","index","current","schedule","dispatch","complete","next","closed","state"],"sources":["C:/Project/AngularApp/node_modules/rxjs/_esm2015/internal/observable/range.js"],"sourcesContent":["import { Observable } from '../Observable';\r\nexport function range(start = 0, count, scheduler) {\r\n    return new Observable(subscriber => {\r\n        if (count === undefined) {\r\n            count = start;\r\n            start = 0;\r\n        }\r\n        let index = 0;\r\n        let current = start;\r\n        if (scheduler) {\r\n            return scheduler.schedule(dispatch, 0, {\r\n                index, count, start, subscriber\r\n            });\r\n        }\r\n        else {\r\n            do {\r\n                if (index++ >= count) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n                subscriber.next(current++);\r\n                if (subscriber.closed) {\r\n                    break;\r\n                }\r\n            } while (true);\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nexport function dispatch(state) {\r\n    const { start, index, count, subscriber } = state;\r\n    if (index >= count) {\r\n        subscriber.complete();\r\n        return;\r\n    }\r\n    subscriber.next(start);\r\n    if (subscriber.closed) {\r\n        return;\r\n    }\r\n    state.index = index + 1;\r\n    state.start = start + 1;\r\n    this.schedule(state);\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,CAAvB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;EAC/C,OAAO,IAAIJ,UAAJ,CAAeK,UAAU,IAAI;IAChC,IAAIF,KAAK,KAAKG,SAAd,EAAyB;MACrBH,KAAK,GAAGD,KAAR;MACAA,KAAK,GAAG,CAAR;IACH;;IACD,IAAIK,KAAK,GAAG,CAAZ;IACA,IAAIC,OAAO,GAAGN,KAAd;;IACA,IAAIE,SAAJ,EAAe;MACX,OAAOA,SAAS,CAACK,QAAV,CAAmBC,QAAnB,EAA6B,CAA7B,EAAgC;QACnCH,KADmC;QAC5BJ,KAD4B;QACrBD,KADqB;QACdG;MADc,CAAhC,CAAP;IAGH,CAJD,MAKK;MACD,GAAG;QACC,IAAIE,KAAK,MAAMJ,KAAf,EAAsB;UAClBE,UAAU,CAACM,QAAX;UACA;QACH;;QACDN,UAAU,CAACO,IAAX,CAAgBJ,OAAO,EAAvB;;QACA,IAAIH,UAAU,CAACQ,MAAf,EAAuB;UACnB;QACH;MACJ,CATD,QASS,IATT;IAUH;;IACD,OAAOP,SAAP;EACH,CAzBM,CAAP;AA0BH;AACD,OAAO,SAASI,QAAT,CAAkBI,KAAlB,EAAyB;EAC5B,MAAM;IAAEZ,KAAF;IAASK,KAAT;IAAgBJ,KAAhB;IAAuBE;EAAvB,IAAsCS,KAA5C;;EACA,IAAIP,KAAK,IAAIJ,KAAb,EAAoB;IAChBE,UAAU,CAACM,QAAX;IACA;EACH;;EACDN,UAAU,CAACO,IAAX,CAAgBV,KAAhB;;EACA,IAAIG,UAAU,CAACQ,MAAf,EAAuB;IACnB;EACH;;EACDC,KAAK,CAACP,KAAN,GAAcA,KAAK,GAAG,CAAtB;EACAO,KAAK,CAACZ,KAAN,GAAcA,KAAK,GAAG,CAAtB;EACA,KAAKO,QAAL,CAAcK,KAAd;AACH"},"metadata":{},"sourceType":"module"}